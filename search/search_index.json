{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"User Guide","text":"<p>This repository enables to easily upload existing Vertex pipelines templates to an Artifact Registry repository and to schedule them using Cloud Scheduler and Cloud Functions.</p> <p>It does for you the creation of the required service accounts, configure the required permissions and create the cloud resources.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>User Guide</li> <li>Table of Contents</li> <li>Prerequisites</li> <li>Setup</li> <li>Installation</li> <li>Usage</li> </ul>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Unix-like environment (Linux, macOS, WSL, etc... Tested on MacOS Monterey, M1 chip)</li> <li>Python 3.8+</li> <li>Conda</li> <li>Google Cloud SDK (tested for version 440.0.0)</li> </ul>"},{"location":"#setup","title":"Setup","text":"<p>First, you need to setup authentication to Google Cloud (select the relevant Google account and project):</p> <pre><code>gcloud config set project &lt;gcp_project_id&gt;\ngcloud auth login\ngcloud auth application-default login\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<p>To install the package in a virtual environment, run the following command:</p> <pre><code>make install\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>To use this repository, you need to:</p> <ol> <li>Enable the following APIs in your project:</li> <li>Cloud Scheduler API</li> <li>Cloud Functions API</li> <li>Cloud Build API</li> <li>Artifact Registry API</li> <li> <p>Cloud Storage API</p> </li> <li> <p>Compile the desired Vertex pipeline in a YAML file (instructions here).</p> </li> <li> <p>Upload the YAML file to the Artifact Registry repository using the following command (you have to perform installation step first and activate the conda virtual environment):</p> </li> </ol> <pre><code>upload_template &lt;path_to_pipeline_yaml_file&gt;\n</code></pre> <ol> <li> <p>Create the file <code>secrets/.env</code> with the appropriate values for your project. You can use the file <code>secrets/.env.template</code> as a template.</p> </li> <li> <p>Replace the values in the file <code>config/cloud_function_params.json</code>. These values will be used to define the pipeline parameters and the pipeline to be scheduled (<code>pipeline_name</code>).</p> </li> <li> <p>Run the following command to create the required service accounts and cloud resources:</p> </li> </ol> <pre><code>make cloud_setup\n</code></pre> <p>This command will:</p> <ol> <li>Create the service accounts required to run the scheduled pipelines and schedule them.</li> <li>Create the necessary cloud resources (Cloud Scheduler, Cloud Functions, Artifact Registry repository).</li> <li>Give the appropriate permissions to the service accounts.</li> </ol> <p>Note: the required permissions required to execute these steps are:</p> Resource creation Permission(s) required Create service account iam.serviceAccounts.create Create artifact registry artifactregistry.repositories.create Creation cloud function cloudfunctions.functions.create, cloudbuild.builds.create Create cloud scheduler cloudscheduler.jobs.create Resource to give permission to (iam-policy-binding) Permission required Project resourcemanager.projects.setIamPolicy Cloud storage storage.buckets.setIamPolicy Cloud function cloudfunctions.functions.setIamPolicy Artifact registry artifactregistry.repositories.setIamPolicy"}]}